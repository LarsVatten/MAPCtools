% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export-PlottingModels.R
\name{plot_lincombs}
\alias{plot_lincombs}
\title{Plot Linear Combinations of Age-Period-Cohort Effects by Strata}
\usage{
plot_lincombs(
  inla_fit,
  apc_model,
  data,
  strata_col,
  reference_level,
  family = NULL,
  age = "age",
  period = "period",
  cohort = "cohort",
  age_title = NULL,
  period_title = NULL,
  cohort_title = NULL,
  y_lab = NULL,
  age_vals = NULL,
  period_vals = NULL,
  cohort_vals = NULL,
  age_breaks = NULL,
  age_limits = NULL,
  period_breaks = NULL,
  period_limits = NULL,
  cohort_breaks = NULL,
  cohort_limits = NULL,
  PDF_export = F
)
}
\arguments{
\item{inla_fit}{An object returned by \code{inla::inla()} containing
\code{summary.lincomb.derived}.}

\item{apc_model}{Character string of length 1 giving which effects to plot:
a combination of \code{"a"} (age), \code{"p"} (period), and \code{"c"} (cohort),
e.g. \code{"ap"}, \code{"apc"}.}

\item{data}{A data.frame used to fit \code{inla_fit}, containing columns
for age, period, cohort, and the strata variable.}

\item{strata_col}{Character name of the factor column in \code{data} defining strata.}

\item{reference_level}{Character value of \code{strata_col} to use as the reference.}

\item{family}{Optional character; if \code{NULL}, \code{y_lab} defaults to
\code{"Mean differences"}.  If \code{"gaussian"}, same; if \code{"poisson"},
\code{"Log mean ratio"}; if \code{"binomial"}, \code{"Log odds ratio"}.}

\item{age}{Character name of the age variable in \code{data} (default \code{"age"}).}

\item{period}{Character name of the period variable in \code{data} (default \code{"period"}).}

\item{cohort}{Character name of the cohort variable in \code{data} (default \code{"cohort"}).}

\item{age_title}{Optional plot title for the age effect.}

\item{period_title}{Optional plot title for the period effect.}

\item{cohort_title}{Optional plot title for the cohort effect.}

\item{y_lab}{Optional y-axis label; if \code{NULL}, set according to \code{family}.}

\item{age_vals}{Optional numeric vector of x-values for age; defaults to
\code{min(data\$age):max(data\$age)}.}

\item{period_vals}{Optional numeric vector of x-values for period; defaults to
\code{min(data\$period):max(data\$period)}.}

\item{cohort_vals}{Optional numeric vector of x-values for cohort; defaults to
\code{min(data\$cohort):max(data\$cohort)}.}

\item{age_breaks}{Optional vector of breaks for the age plot x-axis.}

\item{age_limits}{Optional numeric vector of length 2 giving x-axis limits for age.}

\item{period_breaks}{Optional vector of breaks for the period plot x-axis.}

\item{period_limits}{Optional numeric vector of length 2 giving x-axis limits for period.}

\item{cohort_breaks}{Optional vector of breaks for the cohort plot x-axis.}

\item{cohort_limits}{Optional numeric vector of length 2 giving x-axis limits for cohort.}

\item{PDF_export}{Logical; if \code{TRUE}, use larger font sizes/layout for PDF output.}
}
\value{
A named list of \code{ggplot} objects.  Elements are
\code{"age"}, \code{"period"}, and/or \code{"cohort"} depending on \code{apc_model}.
}
\description{
Generates ggplot2 line plots of estimated linear combinations
for age, period, and/or cohort effects from an INLA fit, stratified by a factor.
Returns a named list of ggplot objects for each requested effect.
}
\details{
The function:
\itemize{
\item Extracts linear combination summaries from \code{inla_fit\$summary.lincomb.derived}.
\item Splits them into age/period/cohort segments based on \code{apc_model}.
\item Constructs a data.frame of means and 95\% HPD intervals by strata.
\item Calls an internal \code{plot_time_effect()} to produce the ggplot for each effect.
}
}
\examples{
\dontrun{
if (requireNamespace("INLA", quietly = TRUE)) {
  # Suppose fit_apc is your INLA model with lincomb.derived
  my_plots <- plot_lincombs(
    inla_fit    = fit_apc,
    apc_model   = "apc",
    data        = my_data,
    strata_col  = "gender",
    reference_level = "male",
    family      = "poisson",
    age_vals    = seq(30, 80, by = 5)
  )
  # Display the age effect plot
  print(my_plots$age)
  }
}

}
